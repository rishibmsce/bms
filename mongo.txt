use mydb;
db.createCollection("Person");
db.student.drop();
db.dropDatabase();
db.Students.update({_id:3, StudName:"Aryan David", Grade:"VII"}, {$set:{Hobbies: "Skating"}}, {upsert:true});
db.Students.find({StudName:"Aryan David"});
db.Students.find({}, {StudName:1, Grade:1, _id:0});
db.Students.find({_id:1}, {StudName:1, Grade:1});
db.Students.find({_id:1}, {StudName:1, Grade:1, _id:0});
db.Students.find({Grade:{$eq:'VII'}}).pretty();
db.Students.find({Grade:{$ne:'VII'}}).pretty();
db.Students.find({Hobbies:{$in: ['Chess','Skating']}}).pretty();
db.Students.find({Hobbies:{$nin: ['Chess','Skating']}}).pretty();
db.Students.find({Hobbies:'Graffiti', StudName:'Hersch Gibbs'}).pretty();
db.Students.find({StudName:/^M/}).pretty();
db.Students.find({StudName:{$regex:"^M"}}).pretty();
db.Students.find({StudName:/s$/}).pretty();
db.Students.find({StudName:/e/}).pretty();
db.Students.find({StudName:/.*e.*/}).pretty();
db.Students.find({StudName:{$regex:"e"}}).pretty();
db.Students.find({StudName:{$regex:"a$"}}).pretty();
db.Students.find({$or:[{_id:3},{_id:4}]});
db.Students.update({_id:3}, {$set:{Location:null}});
db.Students.update({_id:4}, {$set:{Location:null}});
db.Students.find({Location:{$eq:null}});
db.Students.update({_id:3}, {$unset:{Location:null}});
db.Students.update({_id:4}, {$unset:{Location:null}});
db.Students.count();
db.Students.count({Grade:"VII"});
db.Students.find().sort({StudName:1}).pretty();
db.Students.find().sort({StudName:-1}).pretty();
db.Students.find().sort({Grade:1,Hobbies:-1}).pretty();
db.Students.find().sort({Grade:1,Hobbies:1}).pretty();
db.Students.find().skip(2).pretty();
db.Students.find().skip(1).pretty().sort({StudName:1});
db.Students.find().pretty().skip(db.Students.count()-2);
db.Students.find().pretty().skip(2).limit(3);
db.collection.updateOne({ <filter> }, { $set: { newField: "value" }});
db.users.updateOne({ name: "John" }, { $set: { age: 30 }});
db.collection.updateOne({ <filter> }, { $unset: { fieldName: "" }});
db.users.updateOne({ name: "John" }, { $unset: { age: "" }});
db.collection.save({ _id: "123abc", name: "Updated Name", age: 30, status: "active" });
db.collection.save({ _id: "456def", name: "New Document", age: 25, status: "inactive" });
db.collection.remove(<query>, { justOne: <boolean>, writeConcern: <document> });
db.users.remove({ name: "John" });
db.users.remove({ name: "John" }, { justOne: true });
db.Customers.aggregate({$group:{_id:"$CustID",TotAccBal:{$sum:"$AccBal"}}});
db.Customers.aggregate({ $match:{AccType:"S"} }, { $group:{_id:"$CustID",TotAccBal:{$sum:"$AccBal"}} }, { $match:{TotAccBal:{$gt:1200}} });
db.Customers.aggregate({ $group:{_id:"$CustID",TotAccBal:{$avg:"$AccBal"}} });
db.Customers.aggregate({ $group:{_id:"$CustID",TotAccBal:{$max:"$AccBal"}} });
db.Customers.aggregate({ $group:{_id:"$CustID",TotAccBal:{$min:"$AccBal"}} });
mongoimport --db test --collection SampleJSON --type csv --headerline --file d:\sample.txt
mongoexport --db test --collection Customers --csv --fieldFile d:\fields.txt --out d:\output.txt
